% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/brapi_get_observationunits.R
\name{brapi_get_observationunits}
\alias{brapi_get_observationunits}
\title{get /observationunits}
\usage{
brapi_get_observationunits(
  con = NULL,
  observationUnitDbId = "",
  germplasmDbId = "",
  studyDbId = "",
  locationDbId = "",
  trialDbId = "",
  programDbId = "",
  seasonDbId = "",
  observationUnitLevelName = "",
  observationUnitLevelOrder = "",
  observationUnitLevelCode = "",
  includeObservations = NA,
  externalReferenceID = "",
  externalReferenceSource = "",
  page = 0,
  pageSize = 1000
)
}
\arguments{
\item{con}{list; required: TRUE; BrAPI connection object}

\item{observationUnitDbId}{character; required: FALSE; The unique observation
unit identifier to filter on.}

\item{germplasmDbId}{character; required: FALSE; The unique germplasm
(accession) identifier to filter on.}

\item{studyDbId}{character; required: FALSE; The unique study identifier to
filter on.}

\item{locationDbId}{character; required: FALSE; The unique location
identifier, where these observations were collected, to filter on.}

\item{trialDbId}{character; required: FALSE; The unique trial identifier to
filter on.}

\item{programDbId}{character; required: FALSE; The unique program identifier
to filter on.}

\item{seasonDbId}{character; required: FALSE; The year or Phenotyping
campaign of a multi-annual study (trees, grape, $\ldots$) to filter on.}

\item{observationUnitLevelName}{character; required: FALSE; The observation
unit level name. Returns only the observation unit of the specified Level.
References ObservationUnit->observationUnitPosition
->observationLevel->levelName}

\item{observationUnitLevelOrder}{character; required: FALSE; The observation
unit level order number. Returns only the observation unit of the
specified level. References ObservationUnit-&glt;observationUnitPosition
->observationLevel->levelOrder}

\item{observationUnitLevelCode}{character; required: FALSE; The observation
unit level code. This parameter should be used together with
\code{observationUnitLevelName} or \code{observationUnitLevelOrder}. References
ObservationUnit->observationUnitPosition->observationLevel
->levelCode}

\item{includeObservations}{logical; required: FALSE; Use this parameter to
include a list of observations embedded in each ObservationUnit object.
CAUTION - Use this parameter at your own risk. It may return large,
unpaginated lists of observation data. Only set this value to \code{TRUE} if
you are sure you need to.}

\item{externalReferenceID}{character; required: FALSE; An external reference
ID. Could be a simple string or a URI. (use with \code{externalReferenceSource}
parameter)}

\item{externalReferenceSource}{character; required: FALSE; An identifier for
the source system or database of an external reference (use with
\code{externalReferenceID} parameter)}

\item{page}{integer; required: FALSE; Used to request a specific page of data
to be returned. The page indexing starts at 0 (the first page is
\code{page = 0}). Default is \code{0}.}

\item{pageSize}{integer; required: FALSE; The size of the pages to be
returned. Default is \code{1000}.}
}
\value{
data.frame
}
\description{
Get a filtered set of Observation Units
}
\details{
Get a filtered set of Observation Units
}
\examples{
\dontrun{
con <- brapi_db()$testserver
brapi_get_observationunits(con = con)
}

}
\references{
\href{https://app.swaggerhub.com/apis/PlantBreedingAPI/BrAPI-Phenotyping/2.0#/Observation\%20Units/get_observationunits }{BrAPI SwaggerHub}
}
\seealso{
Other brapi-phenotyping: 
\code{\link{brapi_get_events}()},
\code{\link{brapi_get_images_imageDbId}()},
\code{\link{brapi_get_images}()},
\code{\link{brapi_get_methods_methodDbId}()},
\code{\link{brapi_get_methods}()},
\code{\link{brapi_get_observationlevels}()},
\code{\link{brapi_get_observations_observationDbId}()},
\code{\link{brapi_get_observations}()},
\code{\link{brapi_get_observationunits_observationUnitDbId}()},
\code{\link{brapi_get_ontologies}()},
\code{\link{brapi_get_scales_scaleDbId}()},
\code{\link{brapi_get_scales}()},
\code{\link{brapi_get_search_images_searchResultsDbId}()},
\code{\link{brapi_get_search_observations_searchResultsDbId}()},
\code{\link{brapi_get_search_observationunits_searchResultsDbId}()},
\code{\link{brapi_get_search_variables_searchResultsDbId}()},
\code{\link{brapi_get_traits_traitDbId}()},
\code{\link{brapi_get_traits}()},
\code{\link{brapi_get_variables_observationVariableDbId}()},
\code{\link{brapi_get_variables}()},
\code{\link{brapi_post_images}()},
\code{\link{brapi_post_methods}()},
\code{\link{brapi_post_observations}()},
\code{\link{brapi_post_observationunits}()},
\code{\link{brapi_post_scales}()},
\code{\link{brapi_post_search_images}()},
\code{\link{brapi_post_search_observations}()},
\code{\link{brapi_post_search_observationunits}()},
\code{\link{brapi_post_search_variables}()},
\code{\link{brapi_post_traits}()},
\code{\link{brapi_post_variables}()},
\code{\link{brapi_put_images_imageDbId_imagecontent}()},
\code{\link{brapi_put_images_imageDbId}()},
\code{\link{brapi_put_methods_methodDbId}()},
\code{\link{brapi_put_observations_observationDbId}()},
\code{\link{brapi_put_observationunits_observationUnitDbId}()},
\code{\link{brapi_put_scales_scaleDbId}()},
\code{\link{brapi_put_traits_traitDbId}()},
\code{\link{brapi_put_variables_observationVariableDbId}()}

Other Observation Units: 
\code{\link{brapi_get_observationlevels}()},
\code{\link{brapi_get_observationunits_observationUnitDbId}()},
\code{\link{brapi_get_search_observationunits_searchResultsDbId}()},
\code{\link{brapi_post_observationunits}()},
\code{\link{brapi_post_search_observationunits}()},
\code{\link{brapi_put_observationunits_observationUnitDbId}()}
}
\author{
Maikel Verouden
}
\concept{Observation Units}
\concept{brapi-phenotyping}
