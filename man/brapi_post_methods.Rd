% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/brapi_post_methods.R
\name{brapi_post_methods}
\alias{brapi_post_methods}
\title{post /methods}
\usage{
brapi_post_methods(
  con = NULL,
  additionalInfo = list(),
  bibliographicalReference = "",
  description = "",
  externalReferences = "",
  formula = "",
  methodClass = "",
  methodName = "",
  ontologyReference = list()
)
}
\arguments{
\item{con}{list; required: TRUE; BrAPI connection object}

\item{additionalInfo}{list; required: FALSE; Additional arbitrary information.
If provided use the following construct list(additionalProp1 = "string",
additionalProp2 =  "string", additionalProp3 = "string").

The Examples section shows an example on how to construct the
\code{additionalInfo} argument as a list.}

\item{bibliographicalReference}{character; required: FALSE; Bibliographical
reference describing the method. MIAPPE V1.1 (DM-91) Reference associated
to the method - URI/DOI of reference describing the method.}

\item{description}{character; required: FALSE; Method description. MIAPPE
V1.1 (DM-90) Method description - Textual description of the method, which
may extend a method defined in an external reference with specific
parameters, e.g. growth stage, inoculation precise organ (leaf number).}

\item{externalReferences}{data.frame; required: FALSE; A data.frame of
external reference ids. These are references to this piece of data in an
external system. Could be a simple string or a URI. The \code{externalReferences}
argument data.frame should contain the following columns:
\itemize{
\item \code{referenceID} character; required: TRUE; The external reference ID. Could
be a simple string or a URI.
\item \code{referenceSource} character; required: TRUE; An identifier for the source
system or database of this reference.
}

The Examples section shows an example of how to construct the
\code{externalReferences} argument as a data.frame.}

\item{formula}{character; required: FALSE; For computational methods, i.e.
when the method consists in assessing the trait by computing measurements,
write the generic formula used for the calculation.}

\item{methodClass}{character; required: FALSE; Method class (examples:
"Measurement", "Counting", "Estimation",
"Computation", \emph{etc.}).}

\item{methodName}{character; required: FALSE; Human readable name for the
method. MIAPPE V1.1 (DM-88) Method Name of the method of observation.}

\item{ontologyReference}{list; required: FALSE; MIAPPE V1.1 (DM-85) Variable
accession number - Accession number of the variable in the Crop Ontology.
(DM-87) Trait accession number - Accession number of the trait in a
suitable controlled vocabulary (Crop Ontology, Trait Ontology). (DM-89)
Method accession number - Accession number of the method in a suitable
controlled vocabulary (Crop Ontology, Trait Ontology). (DM-93) Scale
accession number - Accession number of the scale in a suitable controlled
vocabulary (Crop Ontology).

The \code{ontolgyReference} list should/can contain the following elements:
\itemize{
\item \code{documentationLinks} data.frame; required: FALSE; Links to various
ontology documentation. Each row in the \code{documentationLinks} data.frame
should contain the following columns:
\itemize{
\item \code{URL} character; required: FALSE; A uniform resource locator
specified as a valid uniform resource identifier (URI), e.g.
http://purl.obolibrary.org/obo/ro.owl
\item \code{type} character; required: FALSE; one of "OBO"|
"RDF"|"WEBPAGE".
}
\item \code{ontologyDbId} character; required: TRUE; Ontology database unique
identifier.
\item \code{ontologyName} character; required: TRUE; Ontology name, e.g. the Crop
Ontology.
\item \code{version} character; required: FALSE; Ontology version (no specific
format).
}

The Examples section shows an example of how to construct the
\code{ontologyReference} argument as a list.}
}
\value{
data.frame
}
\description{
Add new Methods
}
\details{
Create new method objects in the database
}
\examples{
\dontrun{
con <- brapi_db()$testserver
con[["token"]] <- "YYYY"
additionalInfo <- list(dummyData = "TRUE",
                       example = "post_methods")
bibliographicalReference <- "Smith, 1893, Really Cool Paper, Popular Journal"
description <- "Discriminant for root finding of quadratic functions"
externalReferences <-
  data.frame(referenceID = c("doi:10.155454/12341234",
                             "http://purl.obolibrary.org/obo/ro.owl",
                             "75a50e76"),
             referenceSource = c("DOI",
                                 "OBO Library",
                                 "Remote Data Collection Upload Tool"))
formula <- "b^2 - 4ac"
methodClass <- "Computation"
methodName <- "Discriminant"
ontologyReference <- list(
  documentationLinks = data.frame(
    URL = c("http://purl.obolibrary.org/obo/ro.owl",
            "https://en.wikipedia.org/wiki/Discriminant"),
    type = c("OBO",
             "WEBPAGE")),
  ontologyDbId = "ontology_attribute1",
  ontologyName = "Ontology.org",
  version = "17")
## Add the new method
brapi_post_methods(con = con,
                   additionalInfo = additionalInfo,
                   bibliographicalReference = bibliographicalReference,
                   description = description,
                   externalReferences = externalReferences,
                   formula = formula,
                   methodClass = methodClass,
                   methodName = methodName,
                   ontologyReference = ontologyReference)
}

}
\references{
\href{https://app.swaggerhub.com/apis/PlantBreedingAPI/BrAPI-Phenotyping/2.0#/Methods/post_methods }{BrAPI SwaggerHub}
}
\seealso{
Other brapi-phenotyping: 
\code{\link{brapi_get_events}()},
\code{\link{brapi_get_images_imageDbId}()},
\code{\link{brapi_get_images}()},
\code{\link{brapi_get_methods_methodDbId}()},
\code{\link{brapi_get_methods}()},
\code{\link{brapi_get_observationlevels}()},
\code{\link{brapi_get_observations_observationDbId}()},
\code{\link{brapi_get_observations}()},
\code{\link{brapi_get_observationunits_observationUnitDbId}()},
\code{\link{brapi_get_observationunits}()},
\code{\link{brapi_get_ontologies}()},
\code{\link{brapi_get_scales_scaleDbId}()},
\code{\link{brapi_get_scales}()},
\code{\link{brapi_get_search_images_searchResultsDbId}()},
\code{\link{brapi_get_search_observations_searchResultsDbId}()},
\code{\link{brapi_get_search_observationunits_searchResultsDbId}()},
\code{\link{brapi_get_search_variables_searchResultsDbId}()},
\code{\link{brapi_get_traits_traitDbId}()},
\code{\link{brapi_get_traits}()},
\code{\link{brapi_get_variables_observationVariableDbId}()},
\code{\link{brapi_get_variables}()},
\code{\link{brapi_post_images}()},
\code{\link{brapi_post_observations}()},
\code{\link{brapi_post_observationunits}()},
\code{\link{brapi_post_scales}()},
\code{\link{brapi_post_search_images}()},
\code{\link{brapi_post_search_observations}()},
\code{\link{brapi_post_search_observationunits}()},
\code{\link{brapi_post_search_variables}()},
\code{\link{brapi_post_traits}()},
\code{\link{brapi_post_variables}()},
\code{\link{brapi_put_images_imageDbId}()},
\code{\link{brapi_put_methods_methodDbId}()},
\code{\link{brapi_put_observations_observationDbId}()},
\code{\link{brapi_put_observationunits_observationUnitDbId}()},
\code{\link{brapi_put_scales_scaleDbId}()},
\code{\link{brapi_put_traits_traitDbId}()},
\code{\link{brapi_put_variables_observationVariableDbId}()}

Other Methods: 
\code{\link{brapi_get_methods_methodDbId}()},
\code{\link{brapi_get_methods}()},
\code{\link{brapi_put_methods_methodDbId}()}
}
\author{
Maikel Verouden
}
\concept{Methods}
\concept{brapi-phenotyping}
