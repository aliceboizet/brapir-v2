% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/brapi_post_variantsets_extract.R
\name{brapi_post_variantsets_extract}
\alias{brapi_post_variantsets_extract}
\title{post /variantsets/extract}
\usage{
brapi_post_variantsets_extract(
  con = NULL,
  callSetDbIds = "",
  expandHomozygotes = NA,
  sepPhased = "",
  sepUnphased = "",
  studyDbIds = "",
  studyNames = "",
  unknownString = "",
  variantDbIds = "",
  variantSetDbIds = ""
)
}
\arguments{
\item{con}{list; required: TRUE; BrAPI connection object}

\item{callSetDbIds}{vector of type character; required: FALSE; The \code{CallSet}
unique database identifier(s) to search.; default: "", when
using multiple values supply as c("value1", "value2").}

\item{expandHomozygotes}{logical; required: FALSE; Should homozygotes be
expanded (TRUE) or collapsed into a single occurrence (FALSE); default: NA
, other possible values: TRUE | FALSE.}

\item{sepPhased}{character; required: FALSE; The string used as a separator
for phased allele calls.; default: "".}

\item{sepUnphased}{character; required: FALSE; The string used as a separator
for unphased allele calls.; default: "".}

\item{studyDbIds}{vector of type character; required: FALSE; List of unique
database study identifiers to search for; default: "", when
using multiple values supply as c("value1", "value2").}

\item{studyNames}{vector of type character; required: FALSE; List of study
names to filter search results; default: "", when using multiple
values supply as c("value1", "value2").}

\item{unknownString}{character; required: FALSE; The string used as a
representation for missing data.; default: "".}

\item{variantDbIds}{vector of type character; required: FALSE; The unique
variant database identifiers to search.; default: "", when using
multiple values supply as c("value1", "value2").}

\item{variantSetDbIds}{vector of type character; required: FALSE; The unique
VariantSet database identifiers to search.; default: "", when
using multiple values supply as c("value1", "value2").}
}
\value{
data.frame
}
\description{
Create new \code{VariantSet} based on search results
}
\details{
Will perform a search for \code{Calls} which match the search criteria in
the request made. The results of the search will be used to create a new
\code{VariantSet} on the server. The new \code{VariantSet} will be returned.
}
\examples{
\dontrun{
con <- brapi_db()$testserver
con[["token"]] <- "YYYY"
brapi_post_variantsets_extract(con = con,
                               expandHomozygotes = TRUE,
                               sepPhased = "/",
                               sepUnphased = "|",
                               unknownString = "-",
                               variantDbIds = c("variant01",
                                                "variant02"))
}

}
\references{
\href{https://app.swaggerhub.com/apis/PlantBreedingAPI/BrAPI-Genotyping/2.0#/Variant\%20Sets/post_variantsets_extract }{BrAPI SwaggerHub}
}
\seealso{
Other brapi-genotyping: 
\code{\link{brapi_get_allelematrix}()},
\code{\link{brapi_get_callsets_callSetDbId_calls}()},
\code{\link{brapi_get_callsets_callSetDbId}()},
\code{\link{brapi_get_callsets}()},
\code{\link{brapi_get_calls}()},
\code{\link{brapi_get_maps_mapDbId_linkagegroups}()},
\code{\link{brapi_get_maps_mapDbId}()},
\code{\link{brapi_get_maps}()},
\code{\link{brapi_get_markerpositions}()},
\code{\link{brapi_get_references_referenceDbId_bases}()},
\code{\link{brapi_get_references_referenceDbId}()},
\code{\link{brapi_get_referencesets_referenceSetDbId}()},
\code{\link{brapi_get_referencesets}()},
\code{\link{brapi_get_references}()},
\code{\link{brapi_get_samples_sampleDbId}()},
\code{\link{brapi_get_samples}()},
\code{\link{brapi_get_search_allelematrix_searchResultsDbId}()},
\code{\link{brapi_get_search_calls_searchResultsDbId}()},
\code{\link{brapi_get_search_callsets_searchResultsDbId}()},
\code{\link{brapi_get_search_markerpositions_searchResultsDbId}()},
\code{\link{brapi_get_search_references_searchResultsDbId}()},
\code{\link{brapi_get_search_referencesets_searchResultsDbId}()},
\code{\link{brapi_get_search_samples_searchResultsDbId}()},
\code{\link{brapi_get_search_variants_searchResultsDbId}()},
\code{\link{brapi_get_search_variantsets_searchResultsDbId}()},
\code{\link{brapi_get_variants_variantDbId_calls}()},
\code{\link{brapi_get_variants_variantDbId}()},
\code{\link{brapi_get_variantsets_variantSetDbId_callsets}()},
\code{\link{brapi_get_variantsets_variantSetDbId_calls}()},
\code{\link{brapi_get_variantsets_variantSetDbId_variants}()},
\code{\link{brapi_get_variantsets_variantSetDbId}()},
\code{\link{brapi_get_variantsets}()},
\code{\link{brapi_get_variants}()},
\code{\link{brapi_get_vendor_orders_orderId_plates}()},
\code{\link{brapi_get_vendor_orders_orderId_results}()},
\code{\link{brapi_get_vendor_orders_orderId_status}()},
\code{\link{brapi_get_vendor_orders}()},
\code{\link{brapi_get_vendor_specifications}()},
\code{\link{brapi_post_samples}()},
\code{\link{brapi_post_search_allelematrix}()},
\code{\link{brapi_post_search_callsets}()},
\code{\link{brapi_post_search_calls}()},
\code{\link{brapi_post_search_markerpositions}()},
\code{\link{brapi_post_search_referencesets}()},
\code{\link{brapi_post_search_references}()},
\code{\link{brapi_post_search_samples}()},
\code{\link{brapi_post_search_variantsets}()},
\code{\link{brapi_post_search_variants}()},
\code{\link{brapi_put_samples_sampleDbId}()}

Other Variant Sets: 
\code{\link{brapi_get_search_variantsets_searchResultsDbId}()},
\code{\link{brapi_get_variantsets_variantSetDbId_callsets}()},
\code{\link{brapi_get_variantsets_variantSetDbId_calls}()},
\code{\link{brapi_get_variantsets_variantSetDbId_variants}()},
\code{\link{brapi_get_variantsets_variantSetDbId}()},
\code{\link{brapi_get_variantsets}()},
\code{\link{brapi_post_search_variantsets}()}
}
\author{
Maikel Verouden
}
\concept{Variant Sets}
\concept{brapi-genotyping}
