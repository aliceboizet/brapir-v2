% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/brapi_put_images_imageDbId_imagecontent.R
\name{brapi_put_images_imageDbId_imagecontent}
\alias{brapi_put_images_imageDbId_imagecontent}
\title{put /images/\{imageDbId\}/imagecontent}
\usage{
brapi_put_images_imageDbId_imagecontent(
  con = NULL,
  imageDbId = "",
  imageFileContent = ""
)
}
\arguments{
\item{con}{list; required: TRUE; BrAPI connection object}

\item{imageDbId}{character; required: TRUE; The unique identifier for a image}

\item{imageFileContent}{character; required: TRUE; The absolute location of
the image file content to be uploaded to the server.}
}
\value{
data.frame
}
\description{
Update an image with the image file content
}
\details{
Update an image with the image file content. This function should be
paired with the \code{POST /images} call, as implemented in the
\code{brapi_post_images()} function, for full capability.
}
\examples{
\dontrun{
con <- brapi_db()$testserver
con[["token"]] <- "YYYY"

## Create function argument values for brapi_post_images()
additionalInfo <- list(dummyData = "TRUE",
                       example = "post_images")
copyright <- "Copyright 2021 Bob Robertson"
description <- "This is a picture"
descriptiveOntologyTerms <- c("doi:10.1002/0470841559",
                              "Red",
                              "ncbi:0300294")
externalReferences <-
  data.frame(referenceID = c("doi:10.155454/12341234",
                             "http://purl.obolibrary.org/obo/ro.owl",
                             "75a50e76"),
             referenceSource = c("DOI",
                                 "OBO Library",
                                 "Remote Data Collection Upload Tool"))
imageFileName <- "FAIR_data.jpg"
imageFileSize <- 39268
imageHeight <- 407

## Create the imageLocation argument
## Load geojsonR package
library(geojsonR)
## Create a imageLocation list object
## Point geometry
init <- TO_GeoJson$new()
imageLocation <- list()
pointData <- c( 5.663288, # longitude
               51.988720, # lattitude
                     0)   # altitude
imageLocation[["geometry"]] <- init$Point(data = pointData,
                                          stringify = FALSE)
imageLocation[["type"]] <- "Feature"

imageName <- "FAIR Data"
imageTimeStamp <- "2021-10-11T14:11:28.672Z"
imageURL <- "https://wiki.brapi.org/images/tomato"
imageWidth <- 1200
mimeType <- "image/jpg"
observationDbIds <- c("observation1",
                      "observation4")
observationUnitDbId <- "observation_unit1"

## Add new image meta data
out <- brapi_post_images(
  con = con,
  additionalInfo = additionalInfo,
  copyright = copyright,
  description = description,
  descriptiveOntologyTerms = descriptiveOntologyTerms,
  externalReferences = externalReferences,
  imageFileName = imageFileName,
  imageFileSize = imageFileSize,
  imageHeight = imageHeight,
  imageLocation = imageLocation,
  imageName = imageName,
  imageTimeStamp = imageTimeStamp,
  imageURL = imageURL,
  imageWidth = imageWidth,
  mimeType = mimeType,
  observationDbIds = observationDbIds,
  observationUnitDbId = observationUnitDbId)

## Obtain the imageDbId
imageDbId <- unique(out$imageDbId)

## Retrieve information about the new image
brapi_get_images_imageDbId(con = con, imageDbId = imageDbId)

## Update an image with the image file content
imageFileContent <- system.file("extdata",
                                "FAIR_data.jpg",
                                package = "brapirv2")
brapi_put_images_imageDbId_imagecontent(con = con,
                                        imageDbId = imageDbId,
                                        imageFileContent = imageFileContent)

## Check the changes
brapi_get_images_imageDbId(con = con, imageDbId = imageDbId)
}

}
\references{
\href{https://app.swaggerhub.com/apis/PlantBreedingAPI/BrAPI-Phenotyping/2.0#/Images/put_images__imageDbId__imagecontent }{BrAPI SwaggerHub}
}
\seealso{
Other brapi-phenotyping: 
\code{\link{brapi_get_events}()},
\code{\link{brapi_get_images_imageDbId}()},
\code{\link{brapi_get_images}()},
\code{\link{brapi_get_methods_methodDbId}()},
\code{\link{brapi_get_methods}()},
\code{\link{brapi_get_observationlevels}()},
\code{\link{brapi_get_observations_observationDbId}()},
\code{\link{brapi_get_observations_table}()},
\code{\link{brapi_get_observations}()},
\code{\link{brapi_get_observationunits_observationUnitDbId}()},
\code{\link{brapi_get_observationunits}()},
\code{\link{brapi_get_ontologies}()},
\code{\link{brapi_get_scales_scaleDbId}()},
\code{\link{brapi_get_scales}()},
\code{\link{brapi_get_search_images_searchResultsDbId}()},
\code{\link{brapi_get_search_observations_searchResultsDbId}()},
\code{\link{brapi_get_search_observationunits_searchResultsDbId}()},
\code{\link{brapi_get_search_variables_searchResultsDbId}()},
\code{\link{brapi_get_traits_traitDbId}()},
\code{\link{brapi_get_traits}()},
\code{\link{brapi_get_variables_observationVariableDbId}()},
\code{\link{brapi_get_variables}()},
\code{\link{brapi_post_images}()},
\code{\link{brapi_post_methods}()},
\code{\link{brapi_post_observations}()},
\code{\link{brapi_post_observationunits}()},
\code{\link{brapi_post_scales}()},
\code{\link{brapi_post_search_images}()},
\code{\link{brapi_post_search_observations}()},
\code{\link{brapi_post_search_observationunits}()},
\code{\link{brapi_post_search_variables}()},
\code{\link{brapi_post_traits}()},
\code{\link{brapi_post_variables}()},
\code{\link{brapi_put_images_imageDbId}()},
\code{\link{brapi_put_methods_methodDbId}()},
\code{\link{brapi_put_observations_observationDbId}()},
\code{\link{brapi_put_observationunits_observationUnitDbId}()},
\code{\link{brapi_put_scales_scaleDbId}()},
\code{\link{brapi_put_traits_traitDbId}()},
\code{\link{brapi_put_variables_observationVariableDbId}()}

Other Images: 
\code{\link{brapi_get_images_imageDbId}()},
\code{\link{brapi_get_images}()},
\code{\link{brapi_get_search_images_searchResultsDbId}()},
\code{\link{brapi_post_images}()},
\code{\link{brapi_post_search_images}()},
\code{\link{brapi_put_images_imageDbId}()}
}
\author{
Maikel Verouden
}
\concept{Images}
\concept{brapi-phenotyping}
