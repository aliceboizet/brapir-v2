% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/brapi_get_observations_table.R
\name{brapi_get_observations_table}
\alias{brapi_get_observations_table}
\title{get /observations/table}
\usage{
brapi_get_observations_table(
  con = NULL,
  Accept = "application/json",
  observationUnitDbId = "",
  germplasmDbId = "",
  observationVariableDbId = "",
  studyDbId = "",
  locationDbId = "",
  trialDbId = "",
  programDbId = "",
  seasonDbId = "",
  observationLevel = "",
  searchResultsDbId = "",
  observationTimeStampRangeStart = "",
  observationTimeStampRangeEnd = ""
)
}
\arguments{
\item{con}{list; required: TRUE; BrAPI connection object}

\item{Accept}{character; required: TRUE; The requested content type which
should be returned by the server; default: "application/json",
other possible values:
\itemize{
\item "text/csv"
\item "text/tsv"
\item "application/flapjack"
}}

\item{observationUnitDbId}{character; required: FALSE; Unique observation
unit data base identifier to filter on.}

\item{germplasmDbId}{character; required: FALSE; The unique database
identifier of a germplasm (accession) to filter on.}

\item{observationVariableDbId}{character; required: FALSE; The unique
database identifier of an observation variable to filter on.}

\item{studyDbId}{character; required: FALSE; The unique database identifier
of a study to filter on.}

\item{locationDbId}{character; required: FALSE; The unique database
identifier of a location where these observations were collected.}

\item{trialDbId}{character; required: FALSE; The unique database identifier
of a trial to filter on.}

\item{programDbId}{character; required: FALSE; The unique database identifier
of a program to filter on.}

\item{seasonDbId}{character; required: TRUE; The unique identifier for a
season to filter on. For backward compatibility it can be a string like
'2012', '1957-2004'.}

\item{observationLevel}{character; required: FALSE; The type of the
observation unit. Returns only the observation unit of the specified type;
the parent levels identifier can be accessed through
\code{observationUnitStructure}.}

\item{searchResultsDbId}{character; required: FALSE; Permanent unique
database identifier, which references the search results.}

\item{observationTimeStampRangeStart}{character; required: FALSE; Time stamp
to start the range for observations to filter on. Coded in the ISO 8601
standard extended format, where date, time and time zone information needs
to be provided (check for example https://www.w3.org/TR/NOTE-datetime).}

\item{observationTimeStampRangeEnd}{character; required: FALSE; Time stamp
to end the range for observations to filter on. Coded in the ISO 8601
standard extended format, where date, time and time zone information needs
to be provided (check for example https://www.w3.org/TR/NOTE-datetime).}
}
\value{
data.frame
}
\description{
Get a list of Observations in a table format
}
\details{
This service is designed to retrieve a table of time dependent
observation values as a matrix of Observation Units and Observation
Variables. This is also sometimes called a Time Series.
}
\examples{
\dontrun{
con <- brapi_db()$testserver
brapi_get_observations_table(con = con,
                             Accept = "application/json")
}

}
\references{
\href{https://app.swaggerhub.com/apis/PlantBreedingAPI/BrAPI-Phenotyping/2.0#/Observations/get_observations_table }{BrAPI SwaggerHub}
}
\seealso{
Other brapi-phenotyping: 
\code{\link{brapi_get_events}()},
\code{\link{brapi_get_images_imageDbId}()},
\code{\link{brapi_get_images}()},
\code{\link{brapi_get_methods_methodDbId}()},
\code{\link{brapi_get_methods}()},
\code{\link{brapi_get_observationlevels}()},
\code{\link{brapi_get_observations_observationDbId}()},
\code{\link{brapi_get_observations}()},
\code{\link{brapi_get_observationunits_observationUnitDbId}()},
\code{\link{brapi_get_observationunits}()},
\code{\link{brapi_get_ontologies}()},
\code{\link{brapi_get_scales_scaleDbId}()},
\code{\link{brapi_get_scales}()},
\code{\link{brapi_get_search_images_searchResultsDbId}()},
\code{\link{brapi_get_search_observations_searchResultsDbId}()},
\code{\link{brapi_get_search_observationunits_searchResultsDbId}()},
\code{\link{brapi_get_search_variables_searchResultsDbId}()},
\code{\link{brapi_get_traits_traitDbId}()},
\code{\link{brapi_get_traits}()},
\code{\link{brapi_get_variables_observationVariableDbId}()},
\code{\link{brapi_get_variables}()},
\code{\link{brapi_post_images}()},
\code{\link{brapi_post_methods}()},
\code{\link{brapi_post_observations}()},
\code{\link{brapi_post_observationunits}()},
\code{\link{brapi_post_scales}()},
\code{\link{brapi_post_search_images}()},
\code{\link{brapi_post_search_observations}()},
\code{\link{brapi_post_search_observationunits}()},
\code{\link{brapi_post_search_variables}()},
\code{\link{brapi_post_traits}()},
\code{\link{brapi_post_variables}()},
\code{\link{brapi_put_images_imageDbId_imagecontent}()},
\code{\link{brapi_put_images_imageDbId}()},
\code{\link{brapi_put_methods_methodDbId}()},
\code{\link{brapi_put_observations_observationDbId}()},
\code{\link{brapi_put_observationunits_observationUnitDbId}()},
\code{\link{brapi_put_scales_scaleDbId}()},
\code{\link{brapi_put_traits_traitDbId}()},
\code{\link{brapi_put_variables_observationVariableDbId}()}

Other Observations: 
\code{\link{brapi_get_observations_observationDbId}()},
\code{\link{brapi_get_observations}()},
\code{\link{brapi_get_search_observations_searchResultsDbId}()},
\code{\link{brapi_post_observations}()},
\code{\link{brapi_post_search_observations}()},
\code{\link{brapi_put_observations_observationDbId}()}
}
\author{
Maikel Verouden
}
\concept{Observations}
\concept{brapi-phenotyping}
