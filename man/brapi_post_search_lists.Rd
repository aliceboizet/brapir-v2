% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/brapi_post_search_lists.R
\name{brapi_post_search_lists}
\alias{brapi_post_search_lists}
\title{post /search/lists}
\usage{
brapi_post_search_lists(
  con = NULL,
  dateCreatedRangeEnd = "",
  dateCreatedRangeStart = "",
  dateModifiedRangeEnd = "",
  dateModifiedRangeStart = "",
  externalReferenceIDs = "",
  externalReferenceSources = "",
  listDbIds = "",
  listNames = "",
  listOwnerNames = "",
  listOwnerPersonDbIds = "",
  listSources = "",
  listType = "",
  page = 0,
  pageSize = 1000
)
}
\arguments{
\item{con}{list; required: TRUE; BrAPI connection object}

\item{dateCreatedRangeEnd}{character; required: FALSE; Timestamp to end the
search range, when the entity was first created. Coded in the ISO 8601
standard extended format, where date, time and time zone information needs
to be provided (check for example https://www.w3.org/TR/NOTE-datetime).}

\item{dateCreatedRangeStart}{character; required: FALSE; Timestamp to start
the search range, when the entity was first created. Coded in the ISO 8601
standard extended format, where date, time and time zone information needs
to be provided (check for example https://www.w3.org/TR/NOTE-datetime).}

\item{dateModifiedRangeEnd}{character; required: FALSE; Timestamp to end the
search range, when the entity was last modified. Coded in the ISO 8601
standard extended format, where date, time and time zone information needs
to be provided (check for example https://www.w3.org/TR/NOTE-datetime).}

\item{dateModifiedRangeStart}{character; required: FALSE; Timestamp to start
the search range, when the entity was last modified. Coded in the ISO 8601
standard extended format, where date, time and time zone information needs
to be provided (check for example https://www.w3.org/TR/NOTE-datetime).}

\item{externalReferenceIDs}{vector of type character; required: FALSE; List
of external reference identifiers. Could be a simple strings or a URIs.
(use with \code{externalReferenceSources} parameter); default: "",
when using multiple values supply as c("value1",
"value2").}

\item{externalReferenceSources}{vector of type character; required: FALSE;
List of identifiers for the source system or database of an external
reference (use with \code{externalReferenceIDs} parameter);
default: "", when using multiple values supply as
c("value1", "value2").}

\item{listDbIds}{vector of type character; required: FALSE; Unique
identifiers of generic lists to searh for; default: "", when
using multiple values supply as c("value1", "value2").}

\item{listNames}{vector of type character; required: FALSE; Names of generic
lists to search for; default: "", when using multiple values
supply as c("value1", "value2").}

\item{listOwnerNames}{vector of type character; required: FALSE; Names of
list owners to search for; default: "", when using multiple
values supply as c("value1", "value2").}

\item{listOwnerPersonDbIds}{vector of type character; required: FALSE; Unique
identifiers of list owner persons to search for; default: "",
when using multiple values supply as c("value1",
"value2").}

\item{listSources}{vector of type character; required: FALSE; List sources to
search for; default: "", when using multiple values supply as
c("value1", "value2").}

\item{listType}{character; required: FALSE; ; Type of list to search for;
default: "", other possible values: "germplasm"|
"markers"|"observations"|"observationUnits"|
"observationVariables"|"programs"|"samples"|
"studies"|"trials".}

\item{page}{integer; required: FALSE; Which result page is requested. The
page indexing starts at 0 (the first page is 'page'= 0). Default is \code{0}.}

\item{pageSize}{integer; required: FALSE; The size of the pages to be
returned. Default is \code{1000}.}
}
\value{
data.frame
}
\description{
Submit a search request for Lists
}
\details{
Advanced searching for the list resource. Function will return
either the search results (Status 200 for an immediate response) or a
searchResultsDbId (Status 202 for both a saved and an asynchronous search).
}
\examples{
\dontrun{
con <- brapi_db()$testserver
con[["token"]] <- "YYYY"

TO BE ADDED STILL
}

}
\references{
\href{https://app.swaggerhub.com/apis/PlantBreedingAPI/BrAPI-Core/2.0#/Lists/post_search_lists }{BrAPI SwaggerHub}
}
\seealso{
Other brapi-core: 
\code{\link{brapi_get_commoncropnames}()},
\code{\link{brapi_get_lists_listDbId}()},
\code{\link{brapi_get_lists}()},
\code{\link{brapi_get_locations_locationDbId}()},
\code{\link{brapi_get_locations}()},
\code{\link{brapi_get_people_personDbId}()},
\code{\link{brapi_get_people}()},
\code{\link{brapi_get_programs_programDbId}()},
\code{\link{brapi_get_programs}()},
\code{\link{brapi_get_search_lists_searchResultsDbId}()},
\code{\link{brapi_get_search_locations_searchResultsDbId}()},
\code{\link{brapi_get_search_people_searchResultsDbId}()},
\code{\link{brapi_get_search_programs_searchResultsDbId}()},
\code{\link{brapi_get_search_studies_searchResultsDbId}()},
\code{\link{brapi_get_search_trials_searchResultsDbId}()},
\code{\link{brapi_get_seasons_seasonDbId}()},
\code{\link{brapi_get_seasons}()},
\code{\link{brapi_get_serverinfo}()},
\code{\link{brapi_get_studies_studyDbId}()},
\code{\link{brapi_get_studies}()},
\code{\link{brapi_get_studytypes}()},
\code{\link{brapi_get_trials_trialDbId}()},
\code{\link{brapi_get_trials}()},
\code{\link{brapi_post_lists_listDbId_items}()},
\code{\link{brapi_post_lists}()},
\code{\link{brapi_post_locations}()},
\code{\link{brapi_post_people}()},
\code{\link{brapi_post_programs}()},
\code{\link{brapi_post_seasons}()},
\code{\link{brapi_post_studies}()},
\code{\link{brapi_post_trials}()},
\code{\link{brapi_put_lists_listDbId}()},
\code{\link{brapi_put_locations_locationDbId}()},
\code{\link{brapi_put_people_personDbId}()},
\code{\link{brapi_put_programs_programDbId}()},
\code{\link{brapi_put_seasons_seasonDbId}()},
\code{\link{brapi_put_studies_studyDbId}()},
\code{\link{brapi_put_trials_trialDbId}()}

Other Lists: 
\code{\link{brapi_get_lists_listDbId}()},
\code{\link{brapi_get_lists}()},
\code{\link{brapi_get_search_lists_searchResultsDbId}()},
\code{\link{brapi_post_lists_listDbId_items}()},
\code{\link{brapi_post_lists}()},
\code{\link{brapi_put_lists_listDbId}()}
}
\author{
Maikel Verouden
}
\concept{Lists}
\concept{brapi-core}
