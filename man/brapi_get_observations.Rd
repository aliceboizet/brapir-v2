% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/brapi_get_observations.R
\name{brapi_get_observations}
\alias{brapi_get_observations}
\title{get /observations}
\usage{
brapi_get_observations(
  con = NULL,
  observationDbId = "",
  observationUnitDbId = "",
  germplasmDbId = "",
  observationVariableDbId = "",
  studyDbId = "",
  locationDbId = "",
  trialDbId = "",
  programDbId = "",
  seasonDbId = "",
  observationUnitLevelName = "",
  observationUnitLevelOrder = "",
  observationUnitLevelCode = "",
  observationTimeStampRangeStart = "",
  observationTimeStampRangeEnd = "",
  externalReferenceID = "",
  externalReferenceSource = "",
  page = 0,
  pageSize = 1000
)
}
\arguments{
\item{con}{list; required: TRUE; BrAPI connection object}

\item{observationDbId}{character; required: FALSE; Unique observation
identifier to filter on.}

\item{observationUnitDbId}{character; required: FALSE; Unique observation
unit identifier to filter on.}

\item{germplasmDbId}{character; required: FALSE; Unique germplasm (accession)
identifier to filter on}

\item{observationVariableDbId}{character; required: FALSE; Unique observation
variable identifier to filter on.}

\item{studyDbId}{character; required: FALSE; Unique study identifier to
filter on.}

\item{locationDbId}{character; required: FALSE; Unique location identifier,
where the observations were collected.}

\item{trialDbId}{character; required: FALSE; Unique trial identifier to
filter on}

\item{programDbId}{character; required: FALSE; Unique program identifier to
filter on.}

\item{seasonDbId}{character; required: TRUE; The unique identifier for a
season. For backward compatibility it can be a string like '2012',
'1957-2004'}

\item{observationUnitLevelName}{character; required: FALSE; The Observation
Unit Level. Returns only the observation unit of the specified Level.
References ObservationUnit->observationUnitPosition->
observationLevel->levelName}

\item{observationUnitLevelOrder}{character; required: FALSE; The Observation
Unit Level Order Number. Returns only the observation unit of the
specified Level. References ObservationUnit->
observationUnitPosition->observationLevel->levelOrder}

\item{observationUnitLevelCode}{character; required: FALSE; The Observation
Unit Level Code. This parameter should be used together with
\code{observationUnitLevelName} or \code{observationUnitLevelOrder}. References
ObservationUnit->observationUnitPosition->observationLevel->
levelCode}

\item{observationTimeStampRangeStart}{character; required: FALSE; Timestamp
to start the range for observations to filter on. Coded in the ISO 8601
standard extended format, where date, time and time zone information needs
to be provided (check for example https://www.w3.org/TR/NOTE-datetime).}

\item{observationTimeStampRangeEnd}{character; required: FALSE; Timestamp
to end the range for observations to filter on. Coded in the ISO 8601
standard extended format, where date, time and time zone information needs
to be provided (check for example https://www.w3.org/TR/NOTE-datetime).}

\item{externalReferenceID}{character; required: FALSE; An external reference
ID. Could be a simple string or a URI. (use with \code{externalReferenceSource}
parameter)}

\item{externalReferenceSource}{character; required: FALSE; An identifier for
the source system or database of an external reference (use with
\code{externalReferenceID} parameter)}

\item{page}{integer; required: FALSE; Used to request a specific page of data
to be returned. The page indexing starts at 0 (the first page is
\code{page = 0}). Default is \code{0}.}

\item{pageSize}{integer; required: FALSE; The size of the pages to be
returned. Default is \code{1000}.}
}
\value{
data.frame
}
\description{
Get a filtered set of Observations
}
\details{
Retrieve all observations where there are measurements for the given
observation variables.
}
\examples{
\dontrun{
con <- brapi_db()$testserver
brapi_get_observations(con = con)
}

}
\references{
\href{https://app.swaggerhub.com/apis/PlantBreedingAPI/BrAPI-Phenotyping/2.0#/Observations/get_observations }{BrAPI SwaggerHub}
}
\seealso{
Other brapi-phenotyping: 
\code{\link{brapi_get_events}()},
\code{\link{brapi_get_images_imageDbId}()},
\code{\link{brapi_get_images}()},
\code{\link{brapi_get_methods_methodDbId}()},
\code{\link{brapi_get_methods}()},
\code{\link{brapi_get_observationlevels}()},
\code{\link{brapi_get_observations_observationDbId}()},
\code{\link{brapi_get_observationunits_observationUnitDbId}()},
\code{\link{brapi_get_observationunits}()},
\code{\link{brapi_get_ontologies}()},
\code{\link{brapi_get_scales_scaleDbId}()},
\code{\link{brapi_get_scales}()},
\code{\link{brapi_get_traits_traitDbId}()},
\code{\link{brapi_get_traits}()},
\code{\link{brapi_get_variables_observationVariableDbId}()},
\code{\link{brapi_get_variables}()},
\code{\link{brapi_post_methods}()},
\code{\link{brapi_post_observations}()},
\code{\link{brapi_post_observationunits}()},
\code{\link{brapi_post_scales}()},
\code{\link{brapi_post_traits}()},
\code{\link{brapi_post_variables}()},
\code{\link{brapi_put_methods_methodDbId}()},
\code{\link{brapi_put_observations_observationDbId}()},
\code{\link{brapi_put_observationunits_observationUnitDbId}()},
\code{\link{brapi_put_scales_scaleDbId}()},
\code{\link{brapi_put_traits_traitDbId}()}

Other Observations: 
\code{\link{brapi_get_observations_observationDbId}()},
\code{\link{brapi_post_observations}()},
\code{\link{brapi_put_observations_observationDbId}()}
}
\author{
Maikel Verouden
}
\concept{Observations}
\concept{brapi-phenotyping}
