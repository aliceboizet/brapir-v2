% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/brapi_post_lists_listDbId_items.R
\name{brapi_post_lists_listDbId_items}
\alias{brapi_post_lists_listDbId_items}
\title{post /lists/\{listDbId\}/items}
\usage{
brapi_post_lists_listDbId_items(con = NULL, listDbId = "", items = "")
}
\arguments{
\item{con}{list; required: TRUE; BrAPI connection object}

\item{listDbId}{character; required: TRUE; The unique ID of this generic list}

\item{items}{vector of type character; required: TRUE; The list of DbIds to
be added to the specified list; default: "", when using multiple
values supply as c("value1", "value2").}
}
\value{
data.frame
}
\description{
Add Items to a specific List
}
\details{
Add new data to a specific generic lists
}
\examples{
\dontrun{
con <- brapi_db()$testserver
con[["token"]] <- "YYYY"
data <- ""
additionalInfo <- list(dummyData = "True", example = "post_lists")
dateCreated <- "2021-04-12T09:01:03.183+02:00"
dateModified <- "2021-04-13T07:00:24.596Z"
externalReferences <-
  data.frame(referenceID = c("doi:10.155454/12341234",
                             "http://purl.obolibrary.org/obo/ro.owl",
                             "75a50e76"),
             referenceSource = c("DOI",
                                 "OBO Library",
                                 "Remote Data Collection Upload Tool"))
listDescription <-
 "This is a list of germplasm I would like to investigate next spring season"
listName <- "WURgermplasm_Apr_2021"
listOwnerName <- "Bob Robertson"
listOwnerPersonDbId <- "person1"
listSize <- 0
listSource <- "WUR GeneBank"
listType <- "germplasm"
out <- brapi_post_lists(con = con,
                        data = data,
                        additionalInfo = additionalInfo,
                        dateCreated = dateCreated,
                        dateModified = dateModified,
                        externalReferences = externalReferences,
                        listDescription = listDescription,
                        listName = listName,
                        listOwnerName = listOwnerName,
                        listOwnerPersonDbId = listOwnerPersonDbId,
                        listSize = listSize,
                        listSource = listSource,
                        listType = listType)
brapi_post_lists_listDbId_items(con = con,
                                listDbId = unique(out$listDbId),
                                items = c("germ1", "germ2", "germ3"))
}

}
\references{
\href{https://app.swaggerhub.com/apis/PlantBreedingAPI/BrAPI-Core/2.0#/Lists/post_lists__listDbId__items }{BrAPI SwaggerHub}
}
\seealso{
Other brapi-core: 
\code{\link{brapi_get_commoncropnames}()},
\code{\link{brapi_get_lists_listDbId}()},
\code{\link{brapi_get_lists}()},
\code{\link{brapi_get_locations_locationDbId}()},
\code{\link{brapi_get_locations}()},
\code{\link{brapi_get_people_personDbId}()},
\code{\link{brapi_get_people}()},
\code{\link{brapi_get_programs_programDbId}()},
\code{\link{brapi_get_programs}()},
\code{\link{brapi_get_search_lists_searchResultsDbId}()},
\code{\link{brapi_get_search_locations_searchResultsDbId}()},
\code{\link{brapi_get_search_people_searchResultsDbId}()},
\code{\link{brapi_get_search_programs_searchResultsDbId}()},
\code{\link{brapi_get_search_studies_searchResultsDbId}()},
\code{\link{brapi_get_search_trials_searchResultsDbId}()},
\code{\link{brapi_get_seasons_seasonDbId}()},
\code{\link{brapi_get_seasons}()},
\code{\link{brapi_get_serverinfo}()},
\code{\link{brapi_get_studies_studyDbId}()},
\code{\link{brapi_get_studies}()},
\code{\link{brapi_get_studytypes}()},
\code{\link{brapi_get_trials_trialDbId}()},
\code{\link{brapi_get_trials}()},
\code{\link{brapi_post_lists}()}

Other Lists: 
\code{\link{brapi_get_lists_listDbId}()},
\code{\link{brapi_get_lists}()},
\code{\link{brapi_get_search_lists_searchResultsDbId}()},
\code{\link{brapi_post_lists}()}
}
\author{
Maikel Verouden
}
\concept{Lists}
\concept{brapi-core}
