% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/brapi_post_search_variants.R
\name{brapi_post_search_variants}
\alias{brapi_post_search_variants}
\title{post /search/variants}
\usage{
brapi_post_search_variants(
  con = NULL,
  callSetDbIds = "",
  start = as.integer(NA),
  end = as.integer(NA),
  referenceDbId = "",
  variantDbIds = "",
  variantSetDbIds = "",
  pageToken = "",
  pageSize = 1000
)
}
\arguments{
\item{con}{list; required: TRUE; BrAPI connection object}

\item{callSetDbIds}{vector of type character; required: FALSE; The CallSet to
search for specified as unique database callset identifier(s).; default:
"", when using multiple values supply as c("value1",
"value2").}

\item{start}{integer; required: FALSE; The beginning of the window (0-based,
inclusive) for which overlapping variants should be returned. Genomic
positions are non-negative integers less than reference length. Requests
spanning the join of circular genomes are represented as two requests one
on each side of the join (position 0).}

\item{end}{integer; required: FALSE; The end of the window (0-based,
exclusive) for which overlapping variants should be returned.}

\item{referenceDbId}{character; required: FALSE; Only return variants on this
unique reference database identifier; default: "".}

\item{variantDbIds}{vector of type character; required: FALSE; The unique
\code{Variant} database identifier(s) to search for; default: "",
when using multiple values supply as c("value1",
"value2").}

\item{variantSetDbIds}{vector of type character; required: FALSE; The unique
\code{VariantSet} database identifier(s) to search for; default: "",
when using multiple values supply as c("value1",
"value2").}

\item{pageToken}{character; required: FALSE; Used to request a specific page
of data to be returned. Tokenized pages are for large data sets, which can
not be efficiently broken into indexed pages. Use the \code{nextPageToken} and
\code{prevPageToken} from a prior response to construct a query and move to the
next or previous page respectively.}

\item{pageSize}{integer; required: FALSE; The size of the pages to be
returned. Default is \code{1000}.}
}
\value{
data.frame
}
\description{
Submit a search request for \code{Variants}
}
\details{
Submit a search request for \code{Variants}. Function will return either
the search results (Status 200 for an immediate response) or a
\code{searchResultsDbId} (Status 202 for both a saved and an asynchronous
search).
}
\examples{
\dontrun{
con <- brapi_db()$testserver
con[["token"]] <- "YYYY"

# Immediate Response Example
brapi_post_search_variants(con = con, pageSize = 1000)

# Saved or Asynchronous Search Response Example
brapi_post_search_variants(con = con,
                           callSetDbIds = c("callset01",
                                            "callset02"),
                           start = 0,
                           end = 1000,
                           variantDbIds = c("variant01",
                                            "variant02"),
                           variantSetDbIds = "variantset1",
                           pageSize = 1000)
}

}
\references{
\href{https://app.swaggerhub.com/apis/PlantBreedingAPI/BrAPI-Genotyping/2.0#/Variants/post_search_variants }{BrAPI SwaggerHub}
}
\seealso{
Other brapi-genotyping: 
\code{\link{brapi_get_callsets_callSetDbId_calls}()},
\code{\link{brapi_get_callsets_callSetDbId}()},
\code{\link{brapi_get_callsets}()},
\code{\link{brapi_get_calls}()},
\code{\link{brapi_get_maps_mapDbId_linkagegroups}()},
\code{\link{brapi_get_maps_mapDbId}()},
\code{\link{brapi_get_maps}()},
\code{\link{brapi_get_markerpositions}()},
\code{\link{brapi_get_references_referenceDbId_bases}()},
\code{\link{brapi_get_references_referenceDbId}()},
\code{\link{brapi_get_referencesets_referenceSetDbId}()},
\code{\link{brapi_get_referencesets}()},
\code{\link{brapi_get_references}()},
\code{\link{brapi_get_samples_sampleDbId}()},
\code{\link{brapi_get_samples}()},
\code{\link{brapi_get_search_calls_searchResultsDbId}()},
\code{\link{brapi_get_search_callsets_searchResultsDbId}()},
\code{\link{brapi_get_search_markerpositions_searchResultsDbId}()},
\code{\link{brapi_get_search_references_searchResultsDbId}()},
\code{\link{brapi_get_search_referencesets_searchResultsDbId}()},
\code{\link{brapi_get_search_samples_searchResultsDbId}()},
\code{\link{brapi_get_search_variants_searchResultsDbId}()},
\code{\link{brapi_get_search_variantsets_searchResultsDbId}()},
\code{\link{brapi_get_variants_variantDbId_calls}()},
\code{\link{brapi_get_variants_variantDbId}()},
\code{\link{brapi_get_variantsets_variantSetDbId_callsets}()},
\code{\link{brapi_get_variantsets_variantSetDbId_calls}()},
\code{\link{brapi_get_variantsets_variantSetDbId_variants}()},
\code{\link{brapi_get_variantsets_variantSetDbId}()},
\code{\link{brapi_get_variantsets}()},
\code{\link{brapi_get_variants}()},
\code{\link{brapi_get_vendor_orders_orderId_plates}()},
\code{\link{brapi_get_vendor_orders}()},
\code{\link{brapi_post_samples}()},
\code{\link{brapi_post_search_callsets}()},
\code{\link{brapi_post_search_calls}()},
\code{\link{brapi_post_search_markerpositions}()},
\code{\link{brapi_post_search_referencesets}()},
\code{\link{brapi_post_search_references}()},
\code{\link{brapi_post_search_samples}()},
\code{\link{brapi_post_search_variantsets}()},
\code{\link{brapi_post_variantsets_extract}()},
\code{\link{brapi_put_samples_sampleDbId}()}

Other Variants: 
\code{\link{brapi_get_search_variants_searchResultsDbId}()},
\code{\link{brapi_get_variants_variantDbId_calls}()},
\code{\link{brapi_get_variants_variantDbId}()},
\code{\link{brapi_get_variants}()}
}
\author{
Maikel Verouden
}
\concept{Variants}
\concept{brapi-genotyping}
