% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/brapi_put_observations_observationDbId.R
\name{brapi_put_observations_observationDbId}
\alias{brapi_put_observations_observationDbId}
\title{put /observations/\{observationDbId\}}
\usage{
brapi_put_observations_observationDbId(
  con = NULL,
  observationDbId = "",
  additionalInfo = list(),
  collector = "",
  externalReferences = "",
  germplasmDbId = "",
  germplasmName = "",
  observationTimeStamp = "",
  observationUnitDbId = "",
  observationUnitName = "",
  observationVariableDbId = "",
  observationVariableName = "",
  season = list(),
  studyDbId = "",
  uploadedBy = "",
  value = ""
)
}
\arguments{
\item{con}{list; required: TRUE; BrAPI connection object}

\item{observationDbId}{character; required: TRUE; The unique identifier of an
observation to update.}

\item{additionalInfo}{list; required: FALSE; Additional arbitrary information.
If provided use the following construct list(additionalProp1 = "string",
additionalProp2 =  "string", additionalProp3 = "string").

The Examples section shows an example on how to construct the
\code{additionalInfo} argument as a list.}

\item{collector}{character; required: FALSE; The name or identifier of the
entity, which collected the observation.}

\item{externalReferences}{data.frame; required: FALSE; A data.frame of
external reference ids. These are references to this piece of data in an
external system. Could be a simple string or a URI. The \code{externalReferences}
argument data.frame should contain the following columns:
\itemize{
\item \code{referenceID} character; required: TRUE; The external reference ID. Could
be a simple string or a URI.
\item \code{referenceSource} character; required: TRUE; An identifier for the source
system or database of this reference.
}

The Examples section shows an example of how to construct the
\code{externalReferences} argument as a data.frame.}

\item{germplasmDbId}{character; required: FALSE; The identifier which
uniquely identifies a germplasm.}

\item{germplasmName}{character; required: FALSE; Human readable name of the
germplasm. It can be the preferred name and does not have to be unique.}

\item{observationTimeStamp}{character; required: FALSE; The date and time
when the observation was made. Coded in the ISO 8601 standard extended
format, where date, time and time zone information needs to be provided
(check for example https://www.w3.org/TR/NOTE-datetime).}

\item{observationUnitDbId}{character; required: FALSE; The identifier which
uniquely identifies an observation unit.}

\item{observationUnitName}{character; required: FALSE; A human readable name
for an observation unit.}

\item{observationVariableDbId}{character; required: FALSE; The identifier
which uniquely identifies an observation variable.}

\item{observationVariableName}{character; required: FALSE; A human readable
name for an observation variable.}

\item{season}{list; required: FALSE; Information about the season in which
the observation was made. The list can or should contain the following
elements:
\itemize{
\item \code{season} character; required: FALSE; Name of the season, e.g. 'Spring',
'Q2', 'Season A', \emph{etc.}
\item \code{seasonDbId} character; required: \strong{TRUE}; Uniquely identifier for the
season in which the observation was made. For backward
compatibility it can be a string like '2012', '1957-2004'.
\item \code{year} integer; required: FALSE; The 4 digit year of the season in which
the observation was made.
}

The Examples section shows an example of how to construct the
\code{season} argument as a list.}

\item{studyDbId}{character; required: FALSE; The identifier which uniquely
identifies a study within the given database server.}

\item{uploadedBy}{character; required: FALSE; The name or id of the user, who
uploaded the observation to the database system.}

\item{value}{character; required: FALSE; The value of the data collected as
an observation.}
}
\value{
data.frame
}
\description{
Update an existing Observation
}
\details{
Update an existing Observation
}
\examples{
\dontrun{
con <- brapi_db()$testserver
con[["token"]] <- "YYYY"
additionalInfo <- list(dummyData = "TRUE",
                       example = "post_observations")
collector <- "BrAPIR v2"
externalReferences <-
  data.frame(referenceID = c("doi:10.155454/12341234",
                             "http://purl.obolibrary.org/obo/ro.owl",
                             "75a50e76"),
             referenceSource = c("DOI",
                                 "OBO Library",
                                 "Remote Data Collection Upload Tool"))
germplasmDbId <- "germplasm2"
germplasmName <- "Tomatillo Fantastico"
observationTimeStamp <- "2021-05-11T19:00:00+02:00"
observationUnitDbId <- "observation_unit2"
observationUnitName <- "Plot 2"
observationVariableDbId <- "variable1"
observationVariableName <- "Plant Height"
season <- list(season = "summer",
               seasonDbId = "summer_2013",
               year = 2013)
studyDbId <- "study2"
uploadedBy <- "Maikel (BrAPIR)"
value <- "50"
out <-
  brapi_post_observations(con = con,
                          additionalInfo = additionalInfo,
                          collector = collector,
                          externalReferences = externalReferences,
                          germplasmDbId = germplasmDbId,
                          germplasmName = germplasmName,
                          observationTimeStamp = observationTimeStamp,
                          observationUnitDbId = observationUnitDbId,
                          observationUnitName = observationUnitName,
                          observationVariableDbId = observationVariableDbId,
                          observationVarialbleName = observationVariableName,
                          season = season,
                          studyDbId = studyDbId,
                          uploadedBy = uploadedBy,
                          value = value)
observationDbId <- unique(out$observationDbId)
brapi_put_observations_observationDbId(con = con,
                                       observationDbId = observationDbId,
                                       value = "100")
}

}
\references{
\href{https://app.swaggerhub.com/apis/PlantBreedingAPI/BrAPI-Phenotyping/2.0#/Observations/put_observations__observationDbId_ }{BrAPI SwaggerHub}
}
\seealso{
Other brapi-phenotyping: 
\code{\link{brapi_get_events}()},
\code{\link{brapi_get_images_imageDbId}()},
\code{\link{brapi_get_images}()},
\code{\link{brapi_get_methods_methodDbId}()},
\code{\link{brapi_get_methods}()},
\code{\link{brapi_get_observationlevels}()},
\code{\link{brapi_get_observations_observationDbId}()},
\code{\link{brapi_get_observations}()},
\code{\link{brapi_get_observationunits_observationUnitDbId}()},
\code{\link{brapi_get_observationunits}()},
\code{\link{brapi_get_ontologies}()},
\code{\link{brapi_get_scales_scaleDbId}()},
\code{\link{brapi_get_scales}()},
\code{\link{brapi_get_traits_traitDbId}()},
\code{\link{brapi_get_traits}()},
\code{\link{brapi_get_variables_observationVariableDbId}()},
\code{\link{brapi_get_variables}()},
\code{\link{brapi_post_methods}()},
\code{\link{brapi_post_observations}()},
\code{\link{brapi_post_observationunits}()},
\code{\link{brapi_post_scales}()},
\code{\link{brapi_post_traits}()},
\code{\link{brapi_post_variables}()},
\code{\link{brapi_put_methods_methodDbId}()},
\code{\link{brapi_put_observationunits_observationUnitDbId}()},
\code{\link{brapi_put_scales_scaleDbId}()},
\code{\link{brapi_put_traits_traitDbId}()},
\code{\link{brapi_put_variables_observationVariableDbId}()}

Other Observations: 
\code{\link{brapi_get_observations_observationDbId}()},
\code{\link{brapi_get_observations}()},
\code{\link{brapi_post_observations}()}
}
\author{
Maikel Verouden
}
\concept{Observations}
\concept{brapi-phenotyping}
