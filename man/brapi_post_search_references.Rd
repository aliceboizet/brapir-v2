% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/brapi_post_search_references.R
\name{brapi_post_search_references}
\alias{brapi_post_search_references}
\title{post /search/references}
\usage{
brapi_post_search_references(
  con = NULL,
  accessions = "",
  isDerived = NA,
  maxLength = as.integer(NA),
  md5checksums = "",
  minLength = as.integer(NA),
  page = 0,
  pageSize = 1000,
  referenceDbIds = "",
  referenceSetDbIds = ""
)
}
\arguments{
\item{con}{list; required: TRUE; BrAPI connection object}

\item{accessions}{vector of type character; required: FALSE; If specified,
return the references for which the accession matches this string (case-
sensitive, exact match); default: "", when using multiple values
supply as c("value1", "value2").}

\item{isDerived}{logical; required: FALSE; A sequence X is said to be derived
from source sequence Y, if X and Y are of the same length and the per-base
sequence divergence at A/C/G/T bases is sufficiently small. Two sequences
derived from the same official sequence share the same coordinates and
annotations, and can be replaced with the official sequence for certain
use cases. If the reference is derived (TRUE) from a source sequence or
not (FALSE). If unspecified (NA), both will be displayed.}

\item{maxLength}{integer; required: FALSE; The maximum length of the
reference sequences to be retrieved.}

\item{md5checksums}{vector of type character; required: FALSE; If specified,
return the references for which the \code{md5checksum} matches this string
(case-sensitive, exact match); default: "", when using multiple
values supply as c("value1", "value2").}

\item{minLength}{integer; required: FALSE; The minimum length of the
reference sequences to be retrieved.}

\item{page}{integer; required: FALSE; Used to request a specific page of data
to be returned. The page indexing starts at 0 (the first page is
\code{page = 0}). Default is \code{0}.}

\item{pageSize}{integer; required: FALSE; The size of the pages to be
returned. Default is \code{1000}.}

\item{referenceDbIds}{vector of type character; required: FALSE; The unique
database identifier(s) of a reference or references to search; default:
"", when using multiple values supply as c("value1",
"value2").}

\item{referenceSetDbIds}{vector of type character; required: FALSE; The unique
database identifier(s) of a reference set or reference sets to search.;
default: "", when using multiple values supply as c("value1
", "value2").}
}
\value{
data.frame
}
\description{
Submit a search request for \code{References}
}
\details{
Submit a search request for \code{References}. Function will return
either the search results (Status 200 for an immediate response) or a
\code{searchResultsDbId} (Status 202 for both a saved and an asynchronous
search).
}
\examples{
\dontrun{
con <- brapi_db()$testserver
con[["token"]] <- "YYYY"

# Immediate Response Example
brapi_post_search_references(con = con,
                             page = 0,
                             pageSize = 1000)

# Saved or Asynchronous Search Response Example
brapi_post_search_references(con = con,
                             accessions = c("A0000001",
                                            "A0000002"),
                             page = 0,
                             pageSize = 1000,
                             referenceDbIds = c("reference1",
                                                "reference2"),
                             referenceSetDbIds = c("reference_set1",
                                                   "reference_set2"))
}

}
\references{
\href{https://app.swaggerhub.com/apis/PlantBreedingAPI/BrAPI-Genotyping/2.0#/References/post_search_references }{BrAPI SwaggerHub}
}
\seealso{
Other brapi-genotyping: 
\code{\link{brapi_get_allelematrix}()},
\code{\link{brapi_get_callsets_callSetDbId_calls}()},
\code{\link{brapi_get_callsets_callSetDbId}()},
\code{\link{brapi_get_callsets}()},
\code{\link{brapi_get_calls}()},
\code{\link{brapi_get_maps_mapDbId_linkagegroups}()},
\code{\link{brapi_get_maps_mapDbId}()},
\code{\link{brapi_get_maps}()},
\code{\link{brapi_get_markerpositions}()},
\code{\link{brapi_get_references_referenceDbId_bases}()},
\code{\link{brapi_get_references_referenceDbId}()},
\code{\link{brapi_get_referencesets_referenceSetDbId}()},
\code{\link{brapi_get_referencesets}()},
\code{\link{brapi_get_references}()},
\code{\link{brapi_get_samples_sampleDbId}()},
\code{\link{brapi_get_samples}()},
\code{\link{brapi_get_search_allelematrix_searchResultsDbId}()},
\code{\link{brapi_get_search_calls_searchResultsDbId}()},
\code{\link{brapi_get_search_callsets_searchResultsDbId}()},
\code{\link{brapi_get_search_markerpositions_searchResultsDbId}()},
\code{\link{brapi_get_search_references_searchResultsDbId}()},
\code{\link{brapi_get_search_referencesets_searchResultsDbId}()},
\code{\link{brapi_get_search_samples_searchResultsDbId}()},
\code{\link{brapi_get_search_variants_searchResultsDbId}()},
\code{\link{brapi_get_search_variantsets_searchResultsDbId}()},
\code{\link{brapi_get_variants_variantDbId_calls}()},
\code{\link{brapi_get_variants_variantDbId}()},
\code{\link{brapi_get_variantsets_variantSetDbId_callsets}()},
\code{\link{brapi_get_variantsets_variantSetDbId_calls}()},
\code{\link{brapi_get_variantsets_variantSetDbId_variants}()},
\code{\link{brapi_get_variantsets_variantSetDbId}()},
\code{\link{brapi_get_variantsets}()},
\code{\link{brapi_get_variants}()},
\code{\link{brapi_get_vendor_orders_orderId_plates}()},
\code{\link{brapi_get_vendor_orders_orderId_results}()},
\code{\link{brapi_get_vendor_orders_orderId_status}()},
\code{\link{brapi_get_vendor_orders}()},
\code{\link{brapi_get_vendor_specifications}()},
\code{\link{brapi_post_samples}()},
\code{\link{brapi_post_search_allelematrix}()},
\code{\link{brapi_post_search_callsets}()},
\code{\link{brapi_post_search_calls}()},
\code{\link{brapi_post_search_markerpositions}()},
\code{\link{brapi_post_search_referencesets}()},
\code{\link{brapi_post_search_samples}()},
\code{\link{brapi_post_search_variantsets}()},
\code{\link{brapi_post_search_variants}()},
\code{\link{brapi_post_variantsets_extract}()},
\code{\link{brapi_put_samples_sampleDbId}()}

Other References: 
\code{\link{brapi_get_references_referenceDbId_bases}()},
\code{\link{brapi_get_references_referenceDbId}()},
\code{\link{brapi_get_references}()},
\code{\link{brapi_get_search_references_searchResultsDbId}()}
}
\author{
Maikel Verouden
}
\concept{References}
\concept{brapi-genotyping}
