% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/brapi_post_search_studies.R
\name{brapi_post_search_studies}
\alias{brapi_post_search_studies}
\title{post /search/studies}
\usage{
brapi_post_search_studies(
  con = NULL,
  active = NA,
  commonCropNames = "",
  externalReferenceIDs = "",
  externalReferenceSources = "",
  germplasmDbIds = "",
  germplasmNames = "",
  locationDbIds = "",
  locationNames = "",
  observationVariableDbIds = "",
  observationVariableNames = "",
  programDbIds = "",
  programNames = "",
  seasonDbIds = "",
  sortBy = "",
  sortOrder = "",
  studyCodes = "",
  studyDbIds = "",
  studyNames = "",
  studyPUIs = "",
  studyTypes = "",
  trialDbIds = "",
  trialNames = "",
  page = 0,
  pageSize = 1000
)
}
\arguments{
\item{con}{list; required: TRUE; BrAPI connection object}

\item{active}{logical; required: FALSE; Is this study currently active;
default: NA, other possible values: TRUE | FALSE}

\item{commonCropNames}{vector of type character; required: FALSE; Common crop
name(s) of the studies to search for; default: "", when using
multiple values supply as c("value1", "value2").}

\item{externalReferenceIDs}{vector of type character; required: FALSE;
External reference identifier(s) to search for. Could be a simple strings
or a URIs (use with \code{externalReferenceSources} parameter).; default:
"", when using multiple values supply as c("value1",
"value2").}

\item{externalReferenceSources}{vector of type character; required: FALSE;
Source system or database identifier(s) of an external reference(s) to
search for (use with \code{externalReferenceIDs} parameter); default:
"", when using multiple values supply as c("value1",
"value2").}

\item{germplasmDbIds}{vector of type character; required: FALSE; Unique
germplasm indentifier(s) to search for; default: "", when using
multiple values supply as c("value1", "value2").}

\item{germplasmNames}{vector of type character; required: FALSE; Human
readable germplasm name(s) to search for; default: "", when
using multiple values supply as c("value1", "value2").}

\item{locationDbIds}{vector of type character; required: FALSE; The unique
location identifier(s) to search for; default: "", when using
multiple values supply as c("value1", "value2").}

\item{locationNames}{vector of type character; required: FALSE; A human
readable location name(s) to search for; default: "", when using
multiple values supply as c("value1", "value2").}

\item{observationVariableDbIds}{vector of type character; required: FALSE;
Unique observation variable indentifier(s) to search for; default:
"", when using multiple values supply as c("value1",
"value2").}

\item{observationVariableNames}{vector of type character; required: FALSE;
Observation variable name(s) to search for; default: "", when
using multiple values supply as c("value1", "value2").}

\item{programDbIds}{vector of type character; required: FALSE; Unique program
identifier(s) to search for; default: "", when using multiple
values supply as c("value1", "value2").}

\item{programNames}{vector of type character; required: FALSE; Program
name(s) to search for; default: "", when using multiple values
supply as c("value1", "value2").}

\item{seasonDbIds}{vector of type character; required: FALSE; Unique season
identifier(s) to search for; default: "", when using multiple
values supply as c("value1", "value2").}

\item{sortBy}{character; required: FALSE; Name of one of the fields within
the study object on which results can be sorted; default: "".}

\item{sortOrder}{character; required: FALSE; Order results should be sorted,
e.g. "ASC" or "DESC"; default: "".}

\item{studyCodes}{vector of type character; required: FALSE; Short human
readable study code(s) to search for; default: "", when using
multiple values supply as c("value1", "value2").}

\item{studyDbIds}{vector of type character; required: FALSE; Unique study
identifier(s) to search for; default: "", when using multiple
values supply as c("value1", "value2").}

\item{studyNames}{vector of type character; required: FALSE; Study name(s) to
filter search results for; default: "", when using multiple
values supply as c("value1", "value2").}

\item{studyPUIs}{vector of type character; required: FALSE; Study permanent
unique identifier(s) to search for. For example, a URI or DOI; default:
"", when using multiple values supply as c("value1",
"value2").}

\item{studyTypes}{vector of type character; required: FALSE; Study type(s)
being performed to search for, e.g. "Yield Trial", \emph{etc.};
default: "", when using multiple values supply as
c("value1", "value2").}

\item{trialDbIds}{vector of type character; required: FALSE; Unique trial
identifier(s) to search for; default: "", when using multiple
values supply as c("value1", "value2").}

\item{trialNames}{vector of type character; required: FALSE; Human readable
trial name(s) to search for; default: "", when using multiple
values supply as c("value1", "value2").}

\item{page}{integer; required: FALSE; Used to request a specific page of data
to be returned. The page indexing starts at 0 (the first page is
\code{page = 0}). Default is \code{0}.}

\item{pageSize}{integer; required: FALSE; The size of the pages to be
returned. Default is \code{1000}.}
}
\value{
data.frame
}
\description{
Submit a search request for Studies
}
\details{
Advanced searching for the studies resource. Function will return
either the search results (Status 200 for an immediate response) or a
\code{searchResultsDbId} (Status 202 for both a saved and an asynchronous
search).
}
\examples{
\dontrun{
con <- brapi_db()$testserver
con[["token"]] <- "YYYY"

# Immediate Response Example
brapi_post_search_studies(con = con,
                         studyDbIds = "study1")

# Saved or Asynchronous Search Response Example
brapi_post_search_studies(con = con,
                          active = TRUE,
                          commonCropNames = "Tomatillo",
                          locationDbIds = "location_02",
                          studyDbIds = "study2",
                          trialDbIds = "trial2")
}

}
\references{
\href{https://app.swaggerhub.com/apis/PlantBreedingAPI/BrAPI-Core/2.0#/Studies/post_search_studies }{BrAPI SwaggerHub}
}
\seealso{
Other brapi-core: 
\code{\link{brapi_get_commoncropnames}()},
\code{\link{brapi_get_lists_listDbId}()},
\code{\link{brapi_get_lists}()},
\code{\link{brapi_get_locations_locationDbId}()},
\code{\link{brapi_get_locations}()},
\code{\link{brapi_get_people_personDbId}()},
\code{\link{brapi_get_people}()},
\code{\link{brapi_get_programs_programDbId}()},
\code{\link{brapi_get_programs}()},
\code{\link{brapi_get_search_lists_searchResultsDbId}()},
\code{\link{brapi_get_search_locations_searchResultsDbId}()},
\code{\link{brapi_get_search_people_searchResultsDbId}()},
\code{\link{brapi_get_search_programs_searchResultsDbId}()},
\code{\link{brapi_get_search_studies_searchResultsDbId}()},
\code{\link{brapi_get_search_trials_searchResultsDbId}()},
\code{\link{brapi_get_seasons_seasonDbId}()},
\code{\link{brapi_get_seasons}()},
\code{\link{brapi_get_serverinfo}()},
\code{\link{brapi_get_studies_studyDbId}()},
\code{\link{brapi_get_studies}()},
\code{\link{brapi_get_studytypes}()},
\code{\link{brapi_get_trials_trialDbId}()},
\code{\link{brapi_get_trials}()},
\code{\link{brapi_post_lists_listDbId_items}()},
\code{\link{brapi_post_lists}()},
\code{\link{brapi_post_locations}()},
\code{\link{brapi_post_people}()},
\code{\link{brapi_post_programs}()},
\code{\link{brapi_post_search_lists}()},
\code{\link{brapi_post_search_locations}()},
\code{\link{brapi_post_search_people}()},
\code{\link{brapi_post_search_programs}()},
\code{\link{brapi_post_search_trials}()},
\code{\link{brapi_post_seasons}()},
\code{\link{brapi_post_studies}()},
\code{\link{brapi_post_trials}()},
\code{\link{brapi_put_lists_listDbId}()},
\code{\link{brapi_put_locations_locationDbId}()},
\code{\link{brapi_put_people_personDbId}()},
\code{\link{brapi_put_programs_programDbId}()},
\code{\link{brapi_put_seasons_seasonDbId}()},
\code{\link{brapi_put_studies_studyDbId}()},
\code{\link{brapi_put_trials_trialDbId}()}

Other Studies: 
\code{\link{brapi_get_search_studies_searchResultsDbId}()},
\code{\link{brapi_get_studies_studyDbId}()},
\code{\link{brapi_get_studies}()},
\code{\link{brapi_get_studytypes}()},
\code{\link{brapi_post_studies}()},
\code{\link{brapi_put_studies_studyDbId}()}
}
\author{
Maikel Verouden
}
\concept{Studies}
\concept{brapi-core}
