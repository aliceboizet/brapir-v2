% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/brapi_get_allelematrix.R
\name{brapi_get_allelematrix}
\alias{brapi_get_allelematrix}
\title{get /allelematrix}
\usage{
brapi_get_allelematrix(
  con,
  callSetDbId = "",
  dataMatrixAbbreviations = "",
  dataMatrixNames = "",
  dimensionCallSetPage = 0,
  dimensionCallSetPageSize = 100,
  dimensionVariantPage = 0,
  dimensionVariantPageSize = 1000,
  expandHomozygotes = TRUE,
  germplasmDbId = "",
  germplasmName = "",
  germplasmPUI = "",
  positionRange = "",
  preview = FALSE,
  sepPhased = "",
  sepUnphased = "",
  unknownString = "",
  variantDbId = "",
  variantSetDbId = ""
)
}
\arguments{
\item{con}{list; required: TRUE; BrAPI connection object}

\item{callSetDbId}{character; required: FALSE; The ID which uniquely identifies a \code{CallSet} within the given database server}

\item{dataMatrixAbbreviations}{character; required: FALSE; "dataMatrixAbbreviations" is a comma seperated list of abbreviations (ie 'GT, RD' etc). This list controls which data matrices are returned in the response.   This maps to a FORMAT field in the VCF file standard.}

\item{dataMatrixNames}{character; required: FALSE; "dataMatrixNames" is a comma seperated list of names (ie 'Genotype, Read Depth' etc). This list controls which data matrices are returned in the response.   This maps to a FORMAT field in the VCF file standard.}

\item{dimensionCallSetPage}{integer; required: FALSE; The requested page number for the CallSet dimension of the matrix}

\item{dimensionCallSetPageSize}{integer; required: FALSE; The requested page size for the CallSet dimension of the matrix}

\item{dimensionVariantPage}{integer; required: FALSE; The requested page number for the Variant dimension of the matrix}

\item{dimensionVariantPageSize}{integer; required: FALSE; The requested page size for the Variant dimension of the matrix}

\item{expandHomozygotes}{logical; required: FALSE; Should homozygotes be expanded (true) or collapsed into a single occurrence (false)}

\item{germplasmDbId}{character; required: FALSE; Use this parameter to only return results associated with the given \code{Germplasm} unique identifier.   Use \code{GET /germplasm} to find the list of available \code{Germplasm} on a server.}

\item{germplasmName}{character; required: FALSE; Use this parameter to only return results associated with the given \code{Germplasm} by its human readable name.   Use \code{GET /germplasm} to find the list of available \code{Germplasm} on a server.}

\item{germplasmPUI}{character; required: FALSE; Use this parameter to only return results associated with the given \code{Germplasm} by its global permanent unique identifier.   Use \code{GET /germplasm} to find the list of available \code{Germplasm} on a server.}

\item{positionRange}{character; required: FALSE; The postion range to search   Uses the format "contig:start-end" where "contig" is the chromosome or contig name, "start" is   the starting position of the range, and "end" is the ending position of the range   Example: CRHOM_1:12000-14000}

\item{preview}{logical; required: FALSE; Default Value = false  If 'preview' is set to true, then the server should return with the "dataMatrices" field as null or empty. All other data fields should be returned normally.  This is intended to be a preview and give the client a sense of how large the matrix returned will be  If 'preview' is set to false or not set (default), then the server should return all the matrix data as requested.}

\item{sepPhased}{character; required: FALSE; The string to use as a separator for phased allele calls}

\item{sepUnphased}{character; required: FALSE; The string to use as a separator for unphased allele calls}

\item{unknownString}{character; required: FALSE; The string to use as a representation for missing data}

\item{variantDbId}{character; required: FALSE; The ID which uniquely identifies a \code{Variant} within the given database server}

\item{variantSetDbId}{character; required: FALSE; The ID which uniquely identifies a \code{VariantSet} within the given database server}
}
\value{
list
}
\description{
Use this endpoint to retrieve a two dimensional matrix of genotype data. The response structure is based on the VCF file format, but the search and filter parameters give the ability to slice and merge data sets. This allows the user to return the subset of data they are interested in, without having to download the entire genotype file.Each row of data (outer array) corresponds to a variant definition, and each column (inner array) corresponds to a callSet.
}
\examples{

}
\seealso{
Other brapi-genotyping: 
\code{\link{brapi_get_callsets_callSetDbId_calls}()},
\code{\link{brapi_get_callsets_callSetDbId}()},
\code{\link{brapi_get_callsets}()},
\code{\link{brapi_get_calls}()},
\code{\link{brapi_get_maps_mapDbId_linkagegroups}()},
\code{\link{brapi_get_maps_mapDbId}()},
\code{\link{brapi_get_maps}()},
\code{\link{brapi_get_markerpositions}()},
\code{\link{brapi_get_references_referenceDbId_bases}()},
\code{\link{brapi_get_references_referenceDbId}()},
\code{\link{brapi_get_referencesets_referenceSetDbId}()},
\code{\link{brapi_get_referencesets}()},
\code{\link{brapi_get_references}()},
\code{\link{brapi_get_samples_sampleDbId}()},
\code{\link{brapi_get_samples}()},
\code{\link{brapi_get_search_calls_searchResultsDbId}()},
\code{\link{brapi_get_search_callsets_searchResultsDbId}()},
\code{\link{brapi_get_search_markerpositions_searchResultsDbId}()},
\code{\link{brapi_get_search_references_searchResultsDbId}()},
\code{\link{brapi_get_search_referencesets_searchResultsDbId}()},
\code{\link{brapi_get_search_samples_searchResultsDbId}()},
\code{\link{brapi_get_search_variants_searchResultsDbId}()},
\code{\link{brapi_get_search_variantsets_searchResultsDbId}()},
\code{\link{brapi_get_variants_variantDbId_calls}()},
\code{\link{brapi_get_variants_variantDbId}()},
\code{\link{brapi_get_variantsets_variantSetDbId_callsets}()},
\code{\link{brapi_get_variantsets_variantSetDbId_calls}()},
\code{\link{brapi_get_variantsets_variantSetDbId_variants}()},
\code{\link{brapi_get_variantsets_variantSetDbId}()},
\code{\link{brapi_get_variantsets}()},
\code{\link{brapi_get_variants}()},
\code{\link{brapi_get_vendor_orders_orderId_plates}()},
\code{\link{brapi_get_vendor_orders_orderId_results}()},
\code{\link{brapi_get_vendor_orders_orderId_status}()},
\code{\link{brapi_get_vendor_orders}()},
\code{\link{brapi_get_vendor_specifications}()},
\code{\link{brapi_post_samples}()},
\code{\link{brapi_post_search_allelematrix}()},
\code{\link{brapi_post_search_callsets}()},
\code{\link{brapi_post_search_calls}()},
\code{\link{brapi_post_search_markerpositions}()},
\code{\link{brapi_post_search_referencesets}()},
\code{\link{brapi_post_search_references}()},
\code{\link{brapi_post_search_samples}()},
\code{\link{brapi_post_search_variantsets}()},
\code{\link{brapi_post_search_variants}()},
\code{\link{brapi_post_variantsets_extract}()},
\code{\link{brapi_put_samples_sampleDbId}()}

Other Allele Matrix: 
\code{\link{brapi_post_search_allelematrix}()}
}
\author{
J.-F. Rami
}
\concept{Allele Matrix}
\concept{brapi-genotyping}
